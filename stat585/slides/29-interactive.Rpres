STAT 585X
Interactive graphics
===
font-import: http://fonts.googleapis.com/css?family=Marcellus
font-family: 'Marcellus'
author: Di Cook, Heike Hofmann
date: 4/2/2014
width: 1680
height: 1050

```{r setup, include=FALSE}
opts_chunk$set(cache=TRUE)
options(width=80)
```

Starting point
====

Use the code from last class to add a listener to a scatterplot of X and Y:

```
library(plumbr)
mf <- mutaframe(mtcars)
add_listener(mf, function(i, j) {
  # i indicates the rows modified, and j indicates columns
  plot(disp ~ mpg, data = as.data.frame(mf))
})
mf$disp <- sqrt(mf$disp)
```

Extend this setting to include a residual plot (in base plots you can set the number/layout of charts drawn with `par(mfrow)`). 
Make also sure to show a fit of the current model (maybe by overlaying the actual data)

Exercise
===

Look at the package ```stream``` which contains methods for streaming data. Stock market tickers, twitter posts, ... are examples of stremaing data. With streaming data you want to have some analysis of the data as it comes in. In manufacturing this might be to check the extremes, so that the materials are being produced within specifications, and the moment that it moves out a flag is thrown to pause the process and re-calibrate.

Real streaming data is hard to get - so we will be using streaming examples provided by the stream package.
`dsd <- DSD_GaussianMoving()` creates 600 data points in two dimensions. 
Watch to see how the stream behaves:
```
animate_data(dsd, 600,  xlim=c(-.2,1.2), ylim=c(-.2,1.2), 
    pointInterval=10)
reset_stream(dsd)
```


Deliverable
====

The function `get_points` allows you to get successive points from a data stream. Generate a data stream with 10000 points. 
Write a function that updates a mutaframe at regular intervals. You may need to use `Sys.sleep`, and you will need to decide on an appropriate interval size, and how many points to keep track of.

Add  a listener function on the mutaframe that clusters the current batch of points (you should exclude old points after some time) using a k-means approach and plots a scatterplot of points coloured by cluster affiliation (how do you get colours to be stable?).

Bells and whistles: Find a way to appropriately and automatically decide between 2 and 3 clusters.