STAT 585X
More data scraping - Lab Solution
===
font-import: http://fonts.googleapis.com/css?family=Marcellus
font-family: 'Marcellus'
author: Di Cook, Heike Hofmann
date: 2/26/2014
width: 1680
height: 1050

```{r setup, include=FALSE}
opts_chunk$set(cache=TRUE)
options(width=80)
```

Exercise 1
===
left:70%

- The Winter Olympics have just finished. Time to look at the results. 
- Go to the winter olympic games website. 
- Navigate to the medal counts, [full medal counts](http://www.sochi2014.com/en/medal-standings)
- Use the readHTMLTable() function of the XML library to pull out the medal table.
- Make a scatterplot matrix of the Gold, Silver and Bronze counts (like at right).
- Write a paragraph summarizing the association between medal counts

***

![alt text](figures/winter-olympics1.png "medal counts")

Solution
===

```{r}
library(XML)
url <- "http://www.sochi2014.com/en/medal-standings"
tables <- readHTMLTable(url)
length(tables)
medals <- data.frame(tables$`NULL`)
dim(medals)
medals$Gold <- as.numeric(as.character(medals$Gold))
medals$Silver <- as.numeric(as.character(medals$Silver))
medals$Bronze <- as.numeric(as.character(medals$Bronze))
medals$Total <- as.numeric(as.character(medals$Total))
```

Plots
===
left: 50%

```{r}
library(GGally)
ggpairs(medals, columns=3:5, alpha=0.5)
```
***
There is positive association between the medal counts: generally if a country won a lot of bronze they also won a lot of silver and gold. Each of the medal counts, though are very left skewed, which means that the medal winners are concentrated between a few countries. There are a lot of zeros, for countries that attended by did not win any medals. These make the correlations look stronger than they really are. If the countries that didn't win anything are removed then the correlations drop between all pairs of variables. 

Exercise 2
===
left:80%

- Now look at the historical medals, but you should follow links in order to get to the history data
- Pull out the total number of medals for all of the years in the historical records. Using these type of commands will help: 
- ```getNodeSet(root, "//option[@value])"```  
- ```ldply(yearsdetails, function(x) xmlAttrs(x)["value"])```
- Make a parallel coordinate plot showing the medal tallies by year (like plot at right).
- Write a paragraph summarizing what you learn about historical medal tallies.

***
![alt text](figures/winter-olympics2.png "historical medal tallies")

Solution
===

```{r}
url <- "http://www.sochi2014.com/en/medal-standings"
doc <- htmlParse(url)
root <- xmlRoot(doc)

links <- getNodeSet(root, "//a[@href]")
length(links)
linksDF <- ldply(links, function(x) xmlAttrs(x)["href"])
linksDF <- linksDF[grep("history", linksDF$href), , drop=FALSE]
url <- "http://www.sochi2014.com/en/medal-history?year=2010"
doc <- htmlParse(url)
root <- xmlRoot(doc)
yearsdetails <- getNodeSet(root, "//option[@value]")
years <- ldply(yearsdetails, function(x) xmlAttrs(x)["value"])
years <- years[2:22,1]
```

Solution
===

```{r}
url <- "http://www.sochi2014.com"
linksstem <- strsplit(as.character(linksDF),split="=")[[1]][1]

histdf <- data.frame(Country=medals$Country, count2014=medals$Total)
for (i in 1:length(years)) {
  histurl <- paste(url, linksstem, "=", years[i], sep="")
  tables <- data.frame(readHTMLTable(histurl)$`NULL`)
  tables$Total <- as.numeric(as.character(tables$Total))
  x <- tables[,c(2,6)]
  colnames(x)[2] <- paste("count", years[i], sep="")  
  histdf <- merge(histdf, x, by="Country", all=T)
}
```

Plots
===
left: 50%

```{r}
ggparcoord(histdf, columns=23:2, missing="min10", scale="globalminmax")
```
***
The number of medals has steadily increased as time progressed, with a large jump in the most recent olympics. This is probably due to more sports being included. Note the switching of a couple of years, some top medal earners go to zero, indicating end of the cold war. (Note that plotting true to year, would also help see the absence of Olympics during the wars and the 2 year switch to split from the summer games. 