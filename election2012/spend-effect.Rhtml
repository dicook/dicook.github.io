<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <!--
    Design by Free CSS Templates
http://www.freecsstemplates.org
Released for free under a Creative Commons Attribution 2.5 License

Name       : GreenOrange  
Description: A two-column, fixed-width design with dark color scheme.
Version    : 1.0
Released   : 20110411

-->
    <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>Election 2012 - Obama vs Romney</title>
    <link href="style.css" rel="stylesheet" type="text/css" media="screen" />
    </head>
    <body>
    <div id="wrapper">
    <div id="header">
    <div id="logo">
    <h1><a href="#">Election 2012 </a></h1>
    <h1><a href="#">Obama vs Romney </a></h1>
    
    </div>
    </div>
    <!-- end #header -->
<div id="page">
    <div id="page-bgtop">
    <div id="page-bgbtm">
    <div id="content">
    <div class="post">
    <h2 class="title"> Effect of Spending on Polls</h2>
    <div style="clear: both;">&nbsp;</div>
    <div class="entry">
<!--begin.rcode message=FALSE, echo=FALSE
opts_chunk$set(fig.width=8, fig.height=5, fig.path='figures-')
end.rcode-->
    
    <table>
    <tr> <td>
<!--begin.rcode effectplot, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE
##--------------------------------------------------
##0. Load libraries
library(ggplot2)
library(XML)
library(lubridate)
library(plyr)
library(reshape2)
library(RColorBrewer)

##--------------------------------------------------
##1. Load and prepare data
webpg ="http://www.nationalpolls.com/2012/obama-vs-romney.html"
doc <- htmlParse(webpg)
r <- xmlRoot(doc)
body <- xmlChildren(r)[[2]]
tables <- getNodeSet(doc, "//table")
polls<-NULL
pres.data <- read.csv("http://www.fec.gov/data/IndependentExpenditure.do?format=csv&election_yr=2012")
pres.data$exp_dat <- as.Date(pres.data$exp_dat,"%m/%d/%Y")

x <- xmlValue(tables[[6]], "td")
xp <- getNodeSet(tables[[6]], "tr")
xps <- data.frame(do.call("rbind", sapply(xp[-1], function(x) (xpathSApply(x, "td", xmlValue)))))
names(xps) <- c("Pollster", "Region", "Date.Range", "Obama", "Romney")
xps$Date.Range <- as.character(xps$Date.Range)
xps$Obama <- as.numeric(as.character(xps$Obama))
xps$Romney <- as.numeric(as.character(xps$Romney))

xps$Date <- as.Date(sapply(xps$Date.Range, FUN= function(i) strsplit(i, "-")[[1]][2]), "%m/%d/%y")
xps$Region[which(xps$Region=="ConnecticutPPP")] <- "Connecticut"

polls.sub <- xps[which(rowSums(is.na(xps))==0), -3]
polls.sub$Obama.Romney<-polls.sub$Obama-polls.sub$Romney
polls.sub$isNational <- polls.sub$Region=="National"

labels.tracking <- data.frame(Obama.Romney=c(-12, 12), date=c(as.Date("1/8/2012","%d/%m/%Y"), as.Date("1/8/2012","%d/%m/%Y")), text=c("Romney", "Obama"), colour=c("red", "blue"))

polls.sub$Pollster<-as.character(polls.sub$Pollster)
polls.sub$MajorPollster <- polls.sub$Pollster

polls.sub$MajorPollster[grepl("Gallup", polls.sub$Pollster, ignore.case=TRUE)] <- "Gallup"
polls.sub$MajorPollster[grepl("Rasmussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("Ramussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("ABC", polls.sub$Pollster, ignore.case=TRUE)] <- "ABC" 
polls.sub$MajorPollster[grepl("NBC", polls.sub$Pollster, ignore.case=TRUE)] <- "NBC" 
polls.sub$MajorPollster[grepl("CBS", polls.sub$Pollster, ignore.case=TRUE)] <- "CBS" 
polls.sub$MajorPollster[grepl("CNN", polls.sub$Pollster, ignore.case=TRUE)] <- "CNN"
polls.sub$MajorPollster[grepl("Pew", polls.sub$Pollster, ignore.case=TRUE)] <- "Pew" 
polls.sub$MajorPollster[grepl("Public Policy", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP" 
polls.sub$MajorPollster[grepl("PPP", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP"
polls.sub$MajorPollster[grepl("Fox", polls.sub$Pollster, ignore.case=TRUE)] <- "Fox"
polls.sub$MajorPollster[grepl("Quinnipiac", polls.sub$Pollster, ignore.case=TRUE)] <- "Quinnipiac"
polls.sub$MajorPollster[grepl("Dixon", polls.sub$Pollster, ignore.case=TRUE)] <- "MasonDixon"
polls.sub$MajorPollster[grepl("Democracy", polls.sub$Pollster, ignore.case=TRUE)] <- "DemocracyCorps"
polls.sub$MajorPollster[grepl("Survey", polls.sub$Pollster, ignore.case=TRUE)&
    grepl("USA", polls.sub$Pollster, ignore.case=TRUE)] <- "SurveyUSA"
polls.sub$MajorPollster[grepl("Reuters", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("AP", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("YouGov", polls.sub$Pollster, ignore.case=TRUE)] <- "YouGov"

tracking.polls<-subset(polls.sub, Region=="National")
tracking.polls$MajorPollster <- as.character(tracking.polls$MajorPollster)
pollsters <- unique(tracking.polls$MajorPollster)
for (i in 1:length(pollsters)) {
    indx <- c(1:nrow(tracking.polls))[tracking.polls$MajorPollster == pollsters[i]]
    if (length(indx) < 10) 
        tracking.polls$MajorPollster[indx] <- "Other"
}
tracking.polls$MajorPollster <- factor(tracking.polls$MajorPollster)
tracking.polls <- subset(tracking.polls, Date > as.Date("9/4/2012","%d/%m/%Y"))

pollsters <- unique(polls.sub$MajorPollster)
for (i in 1:length(pollsters)) {
    indx <- c(1:nrow(polls.sub))[polls.sub$MajorPollster == pollsters[i]]
    if (length(indx) < 10) 
        polls.sub$MajorPollster[indx] <- "Other"
}
polls.sub$MajorPollster <- factor(polls.sub$MajorPollster)
polls.sub$IsMajor <- polls.sub$MajorPollster!="Other"

labels.tracking <- data.frame(Obama.Romney=c(-14, 14), Date=c(as.Date("1/8/2012","%d/%m/%Y"), as.Date("1/8/2012","%d/%m/%Y")), text=c("Romney", "Obama"), colour=c("red", "blue"))
polls.means <- data.frame(Date=tracking.polls$Date, Obama.Romney=tracking.polls$Obama.Romney)
polls.means$Date <- as.Date(polls.means$Date)
polls.means$wks <- as.Date("1/1/2012","%d/%m/%Y") + weeks(week(polls.means$Date))
polls.m <- ddply(polls.means, "wks", summarise, median=median(Obama.Romney))
tracking.polls$weeks <- as.Date("1/1/2012","%d/%m/%Y") + weeks(week(tracking.polls$Date))

bymedian <- with(tracking.polls, reorder(MajorPollster, Obama.Romney, median))
tracking.polls$MajorPollster <- bymedian

polls.state <- subset(polls.sub, Region!="National", Pollster:Obama.Romney)
polls.state <- subset(polls.state, Date > as.Date("2012-9-4", format="%Y-%d-%m"))
polls.state$Pollster <- as.character(polls.state$Pollster)
polls.state$Date <- as.character(polls.state$Date)
polls.state$Region <- tolower(as.character(polls.state$Region))
polls.state$Region<-gsub("-", " ", polls.state$Region)
polls.state$Region<-gsub("hamsphire", "hampshire", polls.state$Region)

polls.state$Date <- as.Date(polls.state$Date, format="%Y-%m-%d")

indx<-unique(polls.state$Region)
polls.state.recent<-NULL
for (i in 1:length(indx)) {
    x<-subset(polls.state, Region==indx[i])
    if (length(x$Date[x$Date>=(today()-days(21))])>0) 
        polls.state.recent <- rbind(polls.state.recent, x[x$Date>=(today()-days(21)), ])
    else  # Keep the latest poll
        polls.state.recent <- rbind(polls.state.recent, x[order(x$Date, decreasing=T)[1], ])
}
polls.state.av <- ddply(polls.state.recent, "Region", summarise, Obama.Romney=mean(Obama.Romney, na.rm=T))

ord <- order(polls.state.av$Obama.Romney, decreasing=T)
polls.state.av$Region <- factor(polls.state.av$Region, levels=polls.state.av$Region[ord])
polls.state.recent$Region <- factor(polls.state.recent$Region, levels=levels(polls.state.av$Region))
labels <- data.frame(Region=c("north carolina", "north carolina"), Obama.Romney=c(30, -30), text=c("Romney", "Obama"), colour=c("red", "blue"))
polls.state.recent$Obama.Romney <- -polls.state.recent$Obama.Romney


library(plyr)
library(reshape2)

#Get csv from URL
data<-read.csv("http://www.fec.gov/data/IndependentExpenditure.do?format=csv&election_yr=2012")

#Format dates as dates
#data$rec_dat<-as.POSIXlt(format(data$rec_dat, format='%m/%d/$Y'),format='%m/%d/%Y')
data$rec_dat<-as.Date(data$rec_dat,format='%m/%d/%Y')
data$exp_dat<-as.Date(data$exp_dat,format='%m/%d/%Y')

#Format exp_amo, agg_amo as numeric
data$exp_amo<-as.numeric(as.character(gsub(",","",gsub("\\$","",data$exp_amo))))
data$agg_amo<-as.numeric(as.character(gsub(",","",gsub("\\$","",data$agg_amo))))

#Change data to lower case for string searching
dl<-data.frame(lapply(data,function(x) if("factor" %in% class(x)) tolower(x) else x))

# Subset some of the data of interest
pres.data <- dl[grep("obama|romne", dl$can_nam), ]
pres.data <- subset(pres.data, exp_dat >= "2012-04-25")

pres.data$bucket <- rep(NA, nrow(pres.data))

createBucket <- function(text, bucket = rep(NA, nrow(pres.data)), entryText = text) {
  empty <- (sum(is.na(bucket)) / nrow(pres.data) == 1)
  if (empty) {
    bucket[grep(text, as.character(pres.data$pur))] <- entryText
  } else {
    text.grep <- grep(text, as.character(pres.data$pur))
    bucket[text.grep] <- ifelse(is.na(bucket[text.grep]), entryText, bucket[text.grep])
  }
  return(bucket)
}
bucket <- createBucket("tv|television|production|video", entryText = "tv")
bucket <- createBucket("web|internet|online|digital", bucket, "web")
bucket <- createBucket("radio", bucket)
bucket <- createBucket("salar", bucket, "salary")
bucket <- createBucket("email|e\\-mail", bucket, "email")
bucket <- createBucket("call|phone|cell", bucket, "call")
bucket <- createBucket("travel|lodging|diem|travel|hotel|airport|flight", bucket, "travel")
bucket <- createBucket("flyer|flier|palm cards", bucket, "flyer")
bucket <- createBucket("mail", bucket)
bucket <- createBucket("^(sign)|banner|billboard", bucket, "sign")
bucket <- createBucket("design", bucket)
bucket <- createBucket("yard|sign", bucket, "sign")
bucket <- createBucket("vehicle|car|truck|van|bus|gas|transport|mileage", bucket, "transport")
bucket <- createBucket("canvas", bucket, "canvass")
bucket <- createBucket("media", bucket, "media")
bucket <- createBucket("printing", bucket, "printing")
bucket <- createBucket("shirts|button|hat|bumper", bucket, "swag")
bucket[bucket == "design"] <- NA
bucket[is.na(bucket)]<-"other"

pres.data$bucket <- bucket

pres.data$bucket2 <- pres.data$bucket
pres.data[pres.data$bucket2 %in% c("tv", "radio", "media", "web"), "bucket2"] <- "ad"
pres.data[pres.data$bucket2 %in% c("sign", "flyer", "printing", "swag"), "bucket2"] <- "swag"
pres.data[pres.data$bucket2 %in% c("travel", "transport"), "bucket2"] <- "transport"
pres.data[pres.data$bucket2 %in% c("email", "call", "mail", "canvass"), "bucket2"] <- "direct contact"


pres.data$can_nam<-factor(pres.data$can_nam)
obama.flag <- rep(0, nrow(pres.data))
obama.flag[grep("obama", pres.data$can_nam)] <- 1
pres.data$oflag<-factor(obama.flag)

#There is one record without sup_opp, we looked up
#the PAC, and they are conservative, we filled out
#sup_opp accordingly (oppose Obama)
pres.data[pres.data$sup_opp==" ","sup_opp"]<-"oppose"

pres.data$beneful_can <- rep(0, nrow(pres.data))
pres.data$beneful_can[pres.data$oflag==1 & pres.data$sup_opp=="support"] <- "obama"
pres.data$beneful_can[pres.data$oflag==0 & pres.data$sup_opp=="oppose"] <- "obama"
pres.data$beneful_can[pres.data$oflag==0 & pres.data$sup_opp=="support"] <- "romney"
pres.data$beneful_can[pres.data$oflag==1 & pres.data$sup_opp=="oppose"] <- "romney"
pres.data$beneful_can<-factor(pres.data$beneful_can)

#get rid of empty levels
pres.data$sup_opp <- factor(pres.data$sup_opp)

num.weeks <- ddply(pres.data, .(week = factor(week(exp_dat)), beneful_can, bucket2, sup_opp),.drop=FALSE, summarise, WeeklySum = sum(exp_amo))
num.weeks[num.weeks$WeeklySum == 0,"WeeklySum"] = NA

#There is one spe with duplicate names (entry error). This is remedied:
levels(pres.data$spe_nam)[grep("united food",levels(pres.data$spe_nam))]<-"united food and commerical workers international union"
pres.data$spe_nam<-factor(pres.data$spe_nam)


#There are many pacs that are "benefitting" both candidates. This is probably
#due to people who file the paperwork not understanding the support/oppose 
#structure or just data entry errors.

test<-pres.data[,c("spe_nam","sup_opp","oflag","beneful_can")]
count_pac_can<-ddply(test,.(spe_nam,beneful_can),"nrow"); names(count_pac_can)[1]<-"spe_nam"

#There are 77 unique pacs in this dataset, but 82 rows in count_pac_can => there are 5
#pacs that have mistakes. which ones?
prob_spe<-count_pac_can$spe_nam[duplicated(count_pac_can$spe_nam)]
prob_count<-count_pac_can[count_pac_can$spe_nam %in% prob_spe,]

#These pacs have names that show we are right in thinking these are mistakes. 
#Let's assume that it is a mistake and change beneful_can appropriately.

for(i in 1:(dim(prob_count)[1] - 1)) {
  if(prob_count$spe_nam[i] == prob_count$spe_nam[i+1]) {
    pres.data[pres.data$spe_nam == prob_count$spe_nam[i],"beneful_can"] <- ifelse(prob_count$nrow[i] < prob_count$nrow[i+1],as.character(prob_count$beneful_can[i+1]),as.character(prob_count$beneful_can[i]))
  }
}
pres.data$beneful_can<-factor(pres.data$beneful_can)

test<-pres.data[,c("spe_nam","sup_opp","oflag","beneful_can")]
count_pac_can<-ddply(test,.(spe_nam,beneful_can),"nrow"); names(count_pac_can)[1]<-"spe_nam"

# The most common expenses
count_exp<-table(pres.data$bucket,pres.data$beneful_can)

numBuckets <- length(unique(pres.data$bucket))

# The most spent on expenses
df<-pres.data[,c("exp_amo", "beneful_can", "bucket")]
sum_exp <- dcast(melt(df,id=c("beneful_can", "bucket")), df$bucket ~ df$beneful_can, sum)
sum_exp$both<-sum_exp$obama + sum_exp$romney

## For the plot
sum_exp_p <- ddply(df, .(bucket, beneful_can), summarise, Sum = sum(exp_amo))

###
# High Level Buckets
###
# The most spent on expenses
df2<-pres.data[,c("exp_amo", "beneful_can", "bucket2")]
sum_exp2 <- dcast(melt(df2,id=c("beneful_can", "bucket2")), df2$bucket2 ~ df2$beneful_can, sum)
sum_exp2$both<-sum_exp2$obama + sum_exp2$romney

## For the plot
sum_exp2_p <- ddply(df2, .(bucket2, beneful_can), summarise, Sum = sum(exp_amo))

###
# STATS by PAC
###
# Grab only ones that exist
sum_exp_spe <- ddply(pres.data, .(spe_nam), summarise, Sum = sum(exp_amo))
sum_exp_spe <- sum_exp_spe[with(sum_exp_spe, order(-Sum)),]
x <- as.character(sum_exp_spe$spe_nam[1:10])
x[11] <- "Other Obama Super PACs"
x[12] <- "Other Romney Super PACs"

not.top10 <- count_pac_can[with(count_pac_can, order(-nrow)), ][11:nrow(count_pac_can), ]
obama.nottop <- subset(not.top10, beneful_can == "obama")
romney.nottop <- subset(not.top10, beneful_can == "romney")
## NOTE: The top 5 superpacs account for 9149 / 10686 entries!

pres.spe <- subset(pres.data, spe_nam %in% x)
obama.spe <- subset(pres.data, spe_nam %in% as.character(obama.nottop$spe_nam))
obama.spe$spe_nam <- "Other Obama Super PACs"
romney.spe <- subset(pres.data, spe_nam %in% as.character(romney.nottop$spe_nam))
romney.spe$spe_nam <- "Other Romney Super PACs"

pres.spe <- rbind(pres.spe, obama.spe, romney.spe)

df.spe<-pres.spe[,c("exp_amo", "beneful_can", "spe_nam")]
sum_exp.spe <- dcast(melt(df.spe,id=c("beneful_can", "spe_nam")), df.spe$spe_nam ~ df.spe$beneful_can, sum)

## For the plot
sum_exp.spep <- ddply(df.spe, .(spe_nam, beneful_can), summarise, Sum = sum(exp_amo))
sum_exp.spep <- sum_exp.spep[with(sum_exp.spep, order(beneful_can, -Sum)), ]
sum_exp.spep$spe_nam <- factor(sum_exp.spep$spe_nam, levels = sum_exp.spep$spe_nam)

polls.sub2 <- subset(polls.sub[,c(1:2, 5:6)], Date > as.Date("2012-04-25"))
polls.subswing <- subset(polls.sub2, Region %in% c("National", "Colorado", "Florida", "Iowa", "Michigan", "Nevada", "New Hampshire", "North Carolina", "Ohio", "Pennsylvania", "Virginia", "Wisconsin"))

polls.subswing$isNational <- (polls.subswing$Region == "National")

##--------------------------------------------------
##2. Build the plots
num.weeks.sum <- ddply(num.weeks, .(week, beneful_can), summarise, sum = sum(WeeklySum, na.rm = TRUE))
num.weeks.sum$Date <- as.Date("2012-04-25") + (7 * (as.numeric(num.weeks.sum$week) - week(as.Date("2012-04-25"))))

qplot(Date, sum, data = subset(num.weeks.sum, Date < as.Date("2012-10-10")), colour = beneful_can) + scale_y_log10() + geom_line() +
annotate("text", x=as.Date("18/7/2012","%d/%m/%Y"), y=5e+07, label="1", color="#FF0000", hjust=-0.5, alpha=0.4, size=10) +
annotate("rect", xmin=as.Date("18/7/2012","%d/%m/%Y"), ymin=1e+04, xmax=as.Date("19/7/2012","%d/%m/%Y"), ymax=5e+07, fill="#FF0000", alpha=0.4) +
annotate("text", x=as.Date("5/9/2012","%d/%m/%Y"), y=5e+07, label="2", color="#330099", hjust=-0.5, alpha=0.4, size=10) +
annotate("rect", xmin=as.Date("5/9/2012","%d/%m/%Y"), ymin=1e+04, xmax=as.Date("6/9/2012","%d/%m/%Y"), ymax=5e+07, fill="#330099", alpha=0.4) +
scale_colour_manual(name = "Candidate", values = c("#3D64FF", "#CC0033"), labels=c("Obama","Romney" )) +
ylab("Total Spending (Log 10)") + 
scale_x_date(limits=c(as.Date("25/4/2012","%d/%m/%Y"), as.Date("2/11/2012","%d/%m/%Y"))) +
opts(legend.position="bottom")
end.rcode-->
</td>
</tr>
<tr>
<td>
    1=Sharp increase in spending benefitting Romney
    <br/>2=Sharp increase in spending benefitting Obama
    <br/><br/>
    <b>When was there a noticable change in spending?</b>
    <br/>
    Looking at weekly spending by PACs benefitting Romney, we can see a sharp increase in spending that occurred during the week of July 18th. Similarly, there was a sharp increase in spending by Obama-supporting PACs duing the week of September 9th. We look at the national and swing-state polls to determine if there is any noticable effect due to these changes in spending.
</td></tr>
<tr><td>
<!--begin.rcode effectplot2, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE, dependson="effectplot"
qplot(Date, Obama.Romney, data = polls.subswing, colour = isNational) + geom_smooth() + 
    annotate("text", x=as.Date("18/7/2012","%d/%m/%Y"), y=20, label="1", color="#FF0000", hjust=-0.5, alpha=0.4, size=5) +
annotate("rect", xmin=as.Date("18/7/2012","%d/%m/%Y"), ymin=-20, xmax=as.Date("19/7/2012","%d/%m/%Y"), ymax=20, fill="#FF0000", alpha=0.4) +
annotate("text", x=as.Date("5/9/2012","%d/%m/%Y"), y=20, label="2", color="#330099", hjust=-0.5, alpha=0.4, size=5) +
annotate("rect", xmin=as.Date("5/9/2012","%d/%m/%Y"), ymin=-20, xmax=as.Date("6/9/2012","%d/%m/%Y"), ymax=20, fill="#330099", alpha=0.4) +
    scale_colour_manual(name = " ", values = brewer.pal(3, "Dark2")[1:2], labels=c("Swing State","National" )) + 
    scale_x_date(limits=c(as.Date("25/4/2012","%d/%m/%Y"), as.Date("2/11/2012","%d/%m/%Y"))) +
    scale_y_continuous(limits=c(-20,20)) +
    ylab("Romney -------- | -------- Obama  ") +
    annotate("rect", xmin=as.Date("2/2/2012","%d/%m/%Y"), xmax=as.Date("2/12/2012","%d/%m/%Y"), ymin=0, ymax=Inf, fill="blue", alpha=0.03) +
  annotate("rect", xmin=as.Date("2/2/2012","%d/%m/%Y"), xmax=as.Date("2/12/2012","%d/%m/%Y"), ymin=-Inf, ymax=0, fill="red", alpha=0.03) +
  geom_text(data=labels.tracking[1,], mapping=aes(x=Date, y=Obama.Romney, label=text), colour=I("#FF0000"), size=5, alpha=I(0.2), shape=1) +
  geom_text(data=labels.tracking[2,], mapping=aes(x=Date, y=Obama.Romney, label=text), colour=I("#330099"), size=5, alpha=I(0.2), shape=1) +
  theme_bw() +
  opts(
    legend.position="bottom"
  )  
end.rcode-->
    </td>
    </tr>
    <tr><td>
      1=Sharp increase in spending benefitting Romney
    <br/>2=Sharp increase in spending benefitting Obama
    <br/><br/>
    <b>Does PAC spending make a difference?</b>
    <br/>
    In recent elections, the margin of victory in swing states has been so small that any change in support between the candidates is likely to have a profound impact on the election results. While we can't say that the spending <i>caused</i> the difference in support for the candidates, there is a clear relationship seen above between spending and changes in the polls for swing states. This fluctuation isn't necessarily observed in the national polls.  
</td>
</tr>
</table>


</div>
</div>



<div style="clear: both;">&nbsp;</div>
</div>
<!-- end #content -->
<div id="sidebar">
<ul>
<img src="images/obama.jpg" align="left"> <img src="images/romney.jpg" align="right"> 

<li>
<div style="clear: both;">&nbsp;</div>
</li>
<li>
<h2>Terminology</h2>
-<a href="http://en.wikipedia.org/wiki/Dot_plot_%28statistics%29">dotplot</a>- -<a href="http://en.wikipedia.org/wiki/Time_series">time series</a>- -<a href="http://en.wikipedia.org/wiki/Kernel_smoother">smoother</a>- -<a href="http://en.wikipedia.org/wiki/Cartogram">cartogram</a>- -<a href="http://en.wikipedia.org/wiki/Scatterplot">scatterplot</a>- -<a href="http://en.wikipedia.org/wiki/Margin_of_error">margin of error</a>-
</li><br>
<h2>How's it looking?</h2>
					<ul>
					<li><a href="index.html">Popular vote</a></li>
					<li><a href="electoral-map.html">Electoral map</a></li>
					<li><a href="state-trends.html">State trends</a></li>
					<li><a href="tower.html">Electoral college</a></li>
					</ul>
					</li><br>
					<h2>Who's spending?</h2>
					<ul>
<li><a href="spend-type.html">Type of expenses</a></li>
<li><a href="spend-PAC.html">Big spenders</a></li>
<li><a href="spend-time.html">Temporal trends</a></li>
<li><a href="friends.html">Friends of friends</a></li>
</li>
</ul>
</li><br>
<h2>Sources</h2>
<ul>
<li><a href="http://www.nationalpolls.com">National Polls</a></li>
<li> <em> Last poll date:  <!--rinline paste(strsplit(date(), split = " ")[[1]][c(2, 3, 5)], collapse = " ") -->
<li><a href="http://www.fec.gov">Federal Electoral Commission</a></li>
</ul>
</li>	
</ul>
</div>
<!-- end #sidebar -->
<div style="clear: both;">&nbsp;</div>
</div>
</div>
</div>
<!-- end #page -->
</div>
<div id="footer">
<p>Copyright (c) 2012 <a href="http://www.stat.iastate.edu">ISU Statistical Graphics</a> Working Group. All rights reserved. Design by <a href="http://www.freecsstemplates.org/">Free CSS Templates</a>.</p>
</div>
<!-- end #footer -->
</body>
</html>

