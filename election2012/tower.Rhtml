<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
Design by Free CSS Templates
http://www.freecsstemplates.org
Released for free under a Creative Commons Attribution 2.5 License

Name       : GreenOrange  
Description: A two-column, fixed-width design with dark color scheme.
Version    : 1.0
Released   : 20110411

-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="keywords" content="" />
<meta name="description" content="" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>Election 2012 - Obama vs Romney</title>
<link href="style.css" rel="stylesheet" type="text/css" media="screen" />
</head>
<body>
<div id="wrapper">
	<div id="header">
		<div id="logo">
			<h1><a href="#">Election 2012 </a></h1>
  		<h1><a href="#">Obama vs Romney </a></h1>
		</div>
	</div>
	<!-- end #header -->
	<div id="page">
	<div id="page-bgtop">
	<div id="page-bgbtm">
		<div id="content">
			<div class="post">
				<h2 class="title">Electoral college</h2>
				<div style="clear: both;">&nbsp;</div>
				<div class="entry">

<!--begin.rcode message=FALSE, echo=FALSE
  opts_chunk$set(fig.width=8, fig.height=8, fig.path='figures-')
  end.rcode-->

<table>
<tr> <td>
<!--begin.rcode tower, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE
library(ggplot2)
library(XML)
library(lubridate)
library(plyr)
#current.polls.tracking <- read.csv("current-polls-tracking.csv")
#current.polls.tracking$date <- as.Date(current.polls.tracking$date)
webpg ="http://www.nationalpolls.com/2012/obama-vs-romney.html"
doc <- htmlParse(webpg)
r <- xmlRoot(doc)
body <- xmlChildren(r)[[2]]
tables <- getNodeSet(doc, "//table")
polls<-NULL

x <- xmlValue(tables[[6]], "td")
#dt <- as.Date(paste(strsplit(x, " ")[[1]][2], "2012"), "%b %d %Y")
xp <- getNodeSet(tables[[6]], "tr")
xps <- data.frame(do.call("rbind", sapply(xp[-1], function(x) (xpathSApply(x, "td", xmlValue)))))
names(xps) <- c("Pollster", "Region", "Date.Range", "Obama", "Romney")
xps$Date.Range <- as.character(xps$Date.Range)
xps$Obama <- as.numeric(as.character(xps$Obama))
xps$Romney <- as.numeric(as.character(xps$Romney))

xps$Date <- as.Date(sapply(xps$Date.Range, FUN= function(i) strsplit(i, "-")[[1]][2]), "%m/%d/%y")
xps$Region[which(xps$Region=="ConnecticutPPP")] <- "Connecticut"

polls.sub <- xps[which(rowSums(is.na(xps))==0), -3]
polls.sub$Obama.Romney<-polls.sub$Obama-polls.sub$Romney
polls.sub$isNational <- polls.sub$Region=="National"

write.csv(polls.sub, file="NationalPolling-current-polls.csv", row.names=F)

labels.tracking <- data.frame(Obama.Romney=c(-12, 12), date=c(as.Date("1/8/2012","%d/%m/%Y"), as.Date("1/8/2012","%d/%m/%Y")), text=c("Romney", "Obama"), colour=c("red", "blue"))

polls.sub$Pollster<-as.character(polls.sub$Pollster)
polls.sub$MajorPollster <- polls.sub$Pollster

polls.sub$MajorPollster[grepl("Gallup", polls.sub$Pollster, ignore.case=TRUE)] <- "Gallup"
polls.sub$MajorPollster[grepl("Rasmussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("Ramussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("ABC", polls.sub$Pollster, ignore.case=TRUE)] <- "ABC" 
polls.sub$MajorPollster[grepl("NBC", polls.sub$Pollster, ignore.case=TRUE)] <- "NBC" 
polls.sub$MajorPollster[grepl("CBS", polls.sub$Pollster, ignore.case=TRUE)] <- "CBS" 
polls.sub$MajorPollster[grepl("CNN", polls.sub$Pollster, ignore.case=TRUE)] <- "CNN"
polls.sub$MajorPollster[grepl("Pew", polls.sub$Pollster, ignore.case=TRUE)] <- "Pew" 
polls.sub$MajorPollster[grepl("Public Policy", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP" 
polls.sub$MajorPollster[grepl("PPP", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP"
polls.sub$MajorPollster[grepl("Fox", polls.sub$Pollster, ignore.case=TRUE)] <- "Fox"
polls.sub$MajorPollster[grepl("Quinnipiac", polls.sub$Pollster, ignore.case=TRUE)] <- "Quinnipiac"
polls.sub$MajorPollster[grepl("Dixon", polls.sub$Pollster, ignore.case=TRUE)] <- "MasonDixon"
polls.sub$MajorPollster[grepl("Democracy", polls.sub$Pollster, ignore.case=TRUE)] <- "DemocracyCorps"
polls.sub$MajorPollster[grepl("Survey", polls.sub$Pollster, ignore.case=TRUE)&
                        grepl("USA", polls.sub$Pollster, ignore.case=TRUE)] <- "SurveyUSA"
polls.sub$MajorPollster[grepl("Reuters", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("AP", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("YouGov", polls.sub$Pollster, ignore.case=TRUE)] <- "YouGov"

pollsters <- unique(polls.sub$MajorPollster)
for (i in 1:length(pollsters)) {
  indx <- c(1:nrow(polls.sub))[polls.sub$MajorPollster == pollsters[i]]
  if (length(indx) < 10) 
    polls.sub$MajorPollster[indx] <- "Other"
}
polls.sub$MajorPollster <- factor(polls.sub$MajorPollster)
polls.sub$IsMajor <- polls.sub$MajorPollster!="Other"
polls.state <- subset(polls.sub, Region!="National", Pollster:Obama.Romney)
polls.state <- subset(polls.state, Date > as.Date("2012-9-4", format="%Y-%d-%m"))
polls.state$Pollster <- as.character(polls.state$Pollster)
polls.state$Date <- as.character(polls.state$Date)
polls.state$Region <- tolower(as.character(polls.state$Region))
polls.state$Region<-gsub("-", " ", polls.state$Region)
polls.state$Region<-gsub("hamsphire", "hampshire", polls.state$Region)
states <- map_data("state")
states.unique <- data.frame(State=unique(states$region))
x<-unique(states$region)
y<-unique(polls.state$Region)
missing.polls <- x[!x%in%y]
missing.values <- NULL
if ("alabama" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "alabama", 40, 55, "2012-04-09", -15))
if ("arkansas" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "arkansas", 40, 55, "2012-04-09", -15))
if ("delaware" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "delaware", 55, 40, "2012-04-09", 15))
if ("district of columbia" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "district of columbia", 55, 40, "2012-04-09", 15))
if ("idaho" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "idaho", 40, 55, "2012-04-09", -15))
if ("kansas" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "kansas", 40, 55, "2012-04-09", -15))
if ("louisiana" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "louisiana", 40, 55, "2012-04-09", -15))
if ("maryland" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "maryland", 55, 40, "2012-04-09", 15))
if ("mississippi" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "mississippi", 40, 55, "2012-04-09", -15))
if ("rhode island" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "rhode island", 55, 40, "2012-04-09", 15))
if ("south carolina" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "south carolina", 40, 55, "2012-04-09", -15))
if ("south dakota" %in% missing.polls) 
missing.values <- rbind(missing.values,c("guess", "south dakota", 40, 55, "2012-04-09", -15))
if ("west virginia" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "west virginia", 40, 55, "2012-04-09", -15))
if ("wyoming" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "wyoming", 40, 55, "2012-04-09", -15))
if ("alaska" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "alaska", 40, 55, "2012-04-09", -15))
if ("hawaii" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "hawaii", 55, 40, "2012-04-09", 15))
colnames(missing.values)<-c("Pollster", "Region", "Obama", "Romney", "Date", "Obama.Romney")
missing.values <- as.data.frame(missing.values)
missing.values$Pollster <- as.character(missing.values$Pollster)
missing.values$Region <- as.character(missing.values$Region)
missing.values$Obama <- as.numeric(as.character(missing.values$Obama))
missing.values$Romney <- as.numeric(as.character(missing.values$Romney))
missing.values$Date <- as.character(missing.values$Date)
missing.values$Obama.Romney <- as.numeric(as.character(missing.values$Obama.Romney))
#polls.state <- list(missing.values, polls.state) 
#polls.state <- ldply(polls.state)[,-1]
polls.state <- rbind(polls.state, missing.values)
polls.state$Date <- as.Date(polls.state$Date, format="%Y-%m-%d")
indx<-unique(polls.state$Region)
polls.state.recent<-NULL
for (i in 1:length(indx)) {
  x<-subset(polls.state, Region==indx[i])
  if (length(x$Date[x$Date>=(today()-days(21))])>0) 
    polls.state.recent <- rbind(polls.state.recent, x[x$Date>=(today()-days(21)), ])
  else  # Keep the latest poll
    polls.state.recent <- rbind(polls.state.recent, x[order(x$Date, decreasing=T)[1], ])
}
polls.state.av <- ddply(polls.state.recent, "Region", summarise, Obama.Romney=mean(Obama.Romney, na.rm=T))
ev <- read.csv("electoral-votes.csv")
polls.ev <- merge(polls.state, ev, by.x="Region", by.y="State")
colnames(polls.ev)[6] <- "Diff"

polls.ev <- polls.ev[,c("Date","Region","Abbrv","EV","Obama","Romney","Diff")]
polls.ev$Diff <- -polls.ev$Diff

polls.ev.recent <- NULL
indx<-unique(polls.ev$Region)
for (i in 1:length(indx)) {
  x<-subset(polls.ev, Region==indx[i])
  if (length(x$Date[x$Date>=(today()-days(21))])>0) 
    polls.ev.recent <- rbind(polls.ev.recent, x[x$Date>=(today()-days(21)), ])
  else  # Keep the latest poll
    polls.ev.recent <- rbind(polls.ev.recent, x[order(x$Date, decreasing=T)[1], ])
}
polls.ev.av <- ddply(polls.ev.recent, "Region", summarise, Diff=mean(Diff), EV=mean(EV), Abbrv=unique(Abbrv))
make.polygon <- function(min.height, block.width,
                         block.height) {
  
  block <- rbind(c(0,min.height), c(block.width, min.height),
                 c(block.width, block.height + min.height),
                 c(0, block.height + min.height), c(0, min.height))
  colnames(block) <- c("X","Y")
  
  return(data.frame(block))
}

color.gen <- function(color.start = "blue", color.finish = "red",
                      color.mid = "white", number = 7) {
  ramp <- colorRamp(c(color.start,color.mid, color.finish))
  colors <- rgb(ramp( seq(0, 1, length = number)), max = 255)
  return(colors)
}
colrs <- color.gen()

vote.margin <- 5
#vote.margin <- 2
state.block <- polls.ev.av[order(polls.ev.av$Diff),]
state.block$Region <- factor(state.block$Region)
state.block.Dem <- state.block[state.block$Diff < -1*vote.margin,]
state.block.GOP <- state.block[state.block$Diff > vote.margin,]
state.block.GOP <- state.block.GOP[nrow(state.block.GOP):1,]
#state.block.Dem.undec <- state.block[state.block$Diff > -1*vote.margin & state.block$Diff < 0,]
#state.block.GOP.undec <- state.block[state.block$Diff < vote.margin & state.block$Diff > 0,]
#state.block.GOP.undec <- state.block.GOP.undec[nrow(state.block.GOP.undec):1,]

nr <- nrow(state.block.Dem) + nrow(state.block.GOP) #+ nrow(state.block.Dem.undec) + nrow(state.block.GOP.undec) 

block <- data.frame(Region=factor(rep("alabama",nr*5),
  levels=levels(state.block$Region)), X=rep(0,nr*5), Y=rep(0,nr*5))
block.text <- data.frame(Region=factor(rep("alabama",nr),
  levels=levels(state.block$Region)), Abbrv=factor(rep("AL",nr),
  levels=levels(state.block$Abbrv)), X=rep(0,nr), Y=rep(0,nr))
for (i in 1:nrow(state.block.Dem)) {
  if (i == 1)
    start.height = 0
  else
    start.height = sum(state.block.Dem[1:(i-1),"EV"])
  
  x <- make.polygon(start.height, state.block.Dem$Diff[i],
                    state.block.Dem$EV[i])
  block$Region[((i-1)*5+1):(i*5)] <- rep(as.character(state.block.Dem$Region[i]), 5)
  block$X[((i-1)*5+1):(i*5)] <- x$X
  block$Y[((i-1)*5+1):(i*5)] <- x$Y
  
  block.text$Region[i] <- state.block.Dem$Region[i]
  block.text$Abbrv[i] <- state.block.Dem$Abbrv[i]
  block.text$X[i] <- state.block.Dem$Diff[i] + sign(state.block.Dem$Diff[i])
  block.text$Y[i] <- start.height + state.block.Dem$EV[i]/2
}
j <- i
for ( i in 1:nrow(state.block.GOP)) {
  if (i == 1 )
    start.height = 0
  else
    start.height = sum(state.block.GOP[1:(i-1),"EV"])
  
  x <- make.polygon(start.height, state.block.GOP$Diff[i],
                    state.block.GOP$EV[i])
  block$Region[((i-1)*5+1+j*5):(i*5+j*5)] <-
    rep(as.character(state.block.GOP$Region[i]), 5)
  block$X[((i-1)*5+1+j*5):(i*5+j*5)] <- x$X
  block$Y[((i-1)*5+1+j*5):(i*5+j*5)] <- x$Y
  
  block.text$Region[i+j] <- state.block.GOP$Region[i]
  block.text$Abbrv[i+j] <- state.block.GOP$Abbrv[i]
  block.text$X[i+j] <- state.block.GOP$Diff[i] + sign(state.block.GOP$Diff[i])
  block.text$Y[i+j] <- start.height + state.block.GOP$EV[i]/2
}

block.text.Dem <- block.text[block.text[,"X"] < 0,]
block.text.GOP <- block.text[block.text[,"X"] > 0,]

polls.ev.av$Diffcat <- rep(1, nrow(polls.ev.av))
polls.ev.av$Diffcat[polls.ev.av$Diff>=(-10)&polls.ev.av$Diff<(-5)]<-2
polls.ev.av$Diffcat[polls.ev.av$Diff>=(-5)&polls.ev.av$Diff<(-2)]<-3
polls.ev.av$Diffcat[polls.ev.av$Diff>=(-2)&polls.ev.av$Diff<=(2)]<-4
polls.ev.av$Diffcat[polls.ev.av$Diff>(2)&polls.ev.av$Diff<=(5)]<-5
polls.ev.av$Diffcat[polls.ev.av$Diff>(5)&polls.ev.av$Diff<=(10)]<-6
polls.ev.av$Diffcat[polls.ev.av$Diff>(10)]<-7
polls.ev.av$Diffcat<-factor(polls.ev.av$Diffcat,levels=1:7,labels=c("< -10", "-10 to -5", "-5 to -2", "-2 to 2", "2 to 5", "5 to 10", "> 10"))

polls.ev.blocks <- merge(block, polls.ev.av)

p <- ggplot(polls.ev.blocks, aes(x=X, y=Y))+
  geom_abline(intercept=270, slope=0, colour="white", size=1)+
  geom_polygon(aes(group=Region, fill=Diffcat)) +
  scale_fill_manual("Ave of Polls", values=colrs, limits=levels(polls.ev.blocks$Diffcat)) +
  geom_path(aes(group=Region), colour="grey60", size=0.1)+
  scale_y_continuous("Total Electoral Votes", limits=c(0,350))+ 
  scale_x_continuous("% Difference", limits=c(-70, 70)) 
p <- p + geom_text(data=block.text.GOP,aes(x=X,y=Y,label=Abbrv),
                   vjust=0.5, hjust = 0, size = 2.5, colour="grey60")
p <- p + geom_text(data=block.text.Dem,aes(x=X,y=Y,label=Abbrv),
                   vjust=0.5, hjust = 1, size = 2.5, colour="grey60")
lb <- data.frame(x=c(-50, 50), y=c(230,230),
                 label=c("Obama", "Romney"))
p <- p + geom_text(data=lb,aes(x=x, y=y, label=label),
                   size = 5, colour="grey60")
lb <- data.frame(x=-70, y=280, label="270 Votes to win")
p <- p + geom_text(data=lb,aes(x=x,y=y,label=label),
                   hjust = 0, size = 5, colour="white")
undecided.Dem.indx <- c(state.block$Diff <= 0 &
  state.block$Diff >= -1*vote.margin)
undecided.GOP.indx <- c(state.block$Diff <= vote.margin &
  state.block$Diff >= 0)
undecided.Dem.states <- state.block[undecided.Dem.indx,
                                    c("Abbrv","EV","Diff")]
undecided.GOP.states <- state.block[undecided.GOP.indx,
                                    c("Abbrv","EV","Diff")]
lb.Obama <- data.frame(x=c(-45, -50), y=c(220, 220-8), label=c("UNDECIDED leaning to Obama:", "St, EV, Dif"))
lb.Romney <- data.frame(x=c(45, 50), y=c(220, 220-8), label=c("UNDECIDED leaning to Romney:", "St, EV, Dif"))
p <- p + geom_text(data=lb.Obama, aes(x=x, y=y, label=label),
                   size = 3.5, colour="grey60")
p <- p + geom_text(data=lb.Romney,aes(x=x, y=y, label=label),
                   size = 3.5, colour="grey60")
for (i in 1:nrow(undecided.Dem.states)) {
  lb <- data.frame(x=-50, y=220-(i+1)*8, label=paste(undecided.Dem.states[i,1],
                                                     undecided.Dem.states[i,2],round(-1*undecided.Dem.states[i,3],1),sep=", "))
  p <- p + geom_text(data=lb,aes(x=x,y=y,label=label),
                     size = 3.5, colour="grey60")
}
for (i in 1:nrow(undecided.GOP.states)) {
  lb <- data.frame(x=50, y=220-(i+1)*8,label=paste(undecided.GOP.states[i,1],
                                                   undecided.GOP.states[i,2],round(undecided.GOP.states[i,3], 1),sep=", "))
  p <- p + geom_text(data=lb,aes(x=x,y=y,label=label),
                     size = 3.5, colour="grey60")
}
p
  end.rcode-->
</td>
</tr>
<tr>
<td>
  A view of the electoral college. To win the election a candidate needs to get 270 electoral college votes. In this plot the electoral votes for the states are stacked from bottom according to the current margin given by the most recent polls. When there have been more than on poll in the last three weeks, results are averaged. 
</td>
</tr>
</table>

				</div>
			</div>

		<div style="clear: both;">&nbsp;</div>
		</div>
		<!-- end #content -->
		<div id="sidebar">
			<ul>
			<img src="images/obama.jpg" align="left"> <img src="images/romney.jpg" align="right"> 
				<li>
					<div style="clear: both;">&nbsp;</div>
				</li>
				<li>
					<h2>Terminology</h2>
					<p>-<a href="http://en.wikipedia.org/wiki/Dot_plot_%28statistics%29">dotplot</a>- -<a href="http://en.wikipedia.org/wiki/Time_series">time series</a>- -<a href="http://en.wikipedia.org/wiki/Kernel_smoother">smoother</a>- -<a href="http://en.wikipedia.org/wiki/Cartogram">cartogram</a>- -<a href="http://en.wikipedia.org/wiki/Scatterplot">scatterplot</a>- -<a href="http://en.wikipedia.org/wiki/Margin_of_error">margin of error</a>-</p>
				</li>
				<li>
					<h2>How's it looking?</h2>
					<ul>
						<li><a href="index.html">Popular vote</a></li>
						<li><a href="electoral-map.html">Electoral map</a></li>
						<li><a href="state-trends.html">State trends</a></li>
						<li><a href="#">Electoral college</a></li>
					</ul>
				</li>
  			<li>
					<h2>Spending</h2>
					<ul>
						<li><a href="PAC-type.html">Type of expenses</a></li>
						<li><a href="PAC-overall.html">Big spenders</a></li>
						<li><a href="PAC-time.html">Temporal trends</a></li>
						<li><a href="PAC-state.html">State trends</a></li>
					</li>
					</ul>
				</li>
					</ul>
				</li>				<li>
					<h2>Sources</h2>
					<ul>
						<li><a href="http://www.realclearpolitics.com/epolls/latest_polls/">Real Clear Politics</a></li>
					</ul>
				</li>
        <li> <em> Last poll date:  <!--rinline today() --> </li></em>
			</ul>
		</div>
		<!-- end #sidebar -->
		<div style="clear: both;">&nbsp;</div>
	</div>
	</div>
	</div>
	<!-- end #page -->
</div>
	<div id="footer">
		<p>Copyright (c) 2012 <a href="http://www.stat.iastate.edu">ISU Statistical Graphics</a> Working Group. All rights reserved. Design by <a href="http://www.freecsstemplates.org/">Free CSS Templates</a>.</p>
	</div>
	<!-- end #footer -->
</body>
</html>
