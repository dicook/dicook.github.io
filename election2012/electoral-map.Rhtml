<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
Design by Free CSS Templates
http://www.freecsstemplates.org
Released for free under a Creative Commons Attribution 2.5 License

Name       : GreenOrange  
Description: A two-column, fixed-width design with dark color scheme.
Version    : 1.0
Released   : 20110411

-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="keywords" content="" />
<meta name="description" content="" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>Election 2012 - Obama vs Romney</title>
<link href="style.css" rel="stylesheet" type="text/css" media="screen" />
</head>
<body>
<div id="wrapper">
	<div id="header">
		<div id="logo">
			<h1><a href="#">Election 2012 </a></h1>
  		<h1><a href="#">Obama vs Romney </a></h1>
		</div>
	</div>
	<!-- end #header -->
	<div id="page">
	<div id="page-bgtop">
	<div id="page-bgbtm">
		<div id="content">
			<div class="post">
				<h2 class="title">Electoral map</h2>
				<div style="clear: both;">&nbsp;</div>
				<div class="entry">

<!--begin.rcode message=FALSE, echo=FALSE
  opts_chunk$set(fig.width=9, fig.height=5, fig.path='figures-')
  end.rcode-->

<table>
<tr> <td>
<!--begin.rcode map, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE
library(ggplot2)
library(XML)
library(lubridate)
library(plyr)
#current.polls.tracking <- read.csv("current-polls-tracking.csv")
#current.polls.tracking$date <- as.Date(current.polls.tracking$date)
webpg ="http://www.nationalpolls.com/2012/obama-vs-romney.html"
doc <- htmlParse(webpg)
r <- xmlRoot(doc)
body <- xmlChildren(r)[[2]]
tables <- getNodeSet(doc, "//table")
polls<-NULL

x <- xmlValue(tables[[6]], "td")
#dt <- as.Date(paste(strsplit(x, " ")[[1]][2], "2012"), "%b %d %Y")
xp <- getNodeSet(tables[[6]], "tr")
xps <- data.frame(do.call("rbind", sapply(xp[-1], function(x) (xpathSApply(x, "td", xmlValue)))))
names(xps) <- c("Pollster", "Region", "Date.Range", "Obama", "Romney")
xps$Date.Range <- as.character(xps$Date.Range)
xps$Obama <- as.numeric(as.character(xps$Obama))
xps$Romney <- as.numeric(as.character(xps$Romney))

xps$Date <- as.Date(sapply(xps$Date.Range, FUN= function(i) strsplit(i, "-")[[1]][2]), "%m/%d/%y")
xps$Region[which(xps$Region=="ConnecticutPPP")] <- "Connecticut"

polls.sub <- xps[which(rowSums(is.na(xps))==0), -3]
polls.sub$Obama.Romney<-polls.sub$Obama-polls.sub$Romney
polls.sub$isNational <- polls.sub$Region=="National"

#write.csv(polls.sub, file="NationalPolling-current-polls.csv", row.names=F)

labels.tracking <- data.frame(Obama.Romney=c(-12, 12), date=c(as.Date("1/8/2012","%d/%m/%Y"), as.Date("1/8/2012","%d/%m/%Y")), text=c("Romney", "Obama"), colour=c("red", "blue"))

polls.sub$Pollster<-as.character(polls.sub$Pollster)
polls.sub$MajorPollster <- polls.sub$Pollster

polls.sub$MajorPollster[grepl("Gallup", polls.sub$Pollster, ignore.case=TRUE)] <- "Gallup"
polls.sub$MajorPollster[grepl("Rasmussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("Ramussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("ABC", polls.sub$Pollster, ignore.case=TRUE)] <- "ABC" 
polls.sub$MajorPollster[grepl("NBC", polls.sub$Pollster, ignore.case=TRUE)] <- "NBC" 
polls.sub$MajorPollster[grepl("CBS", polls.sub$Pollster, ignore.case=TRUE)] <- "CBS" 
polls.sub$MajorPollster[grepl("CNN", polls.sub$Pollster, ignore.case=TRUE)] <- "CNN"
polls.sub$MajorPollster[grepl("Pew", polls.sub$Pollster, ignore.case=TRUE)] <- "Pew" 
polls.sub$MajorPollster[grepl("Public Policy", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP" 
polls.sub$MajorPollster[grepl("PPP", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP"
polls.sub$MajorPollster[grepl("Fox", polls.sub$Pollster, ignore.case=TRUE)] <- "Fox"
polls.sub$MajorPollster[grepl("Quinnipiac", polls.sub$Pollster, ignore.case=TRUE)] <- "Quinnipiac"
polls.sub$MajorPollster[grepl("Dixon", polls.sub$Pollster, ignore.case=TRUE)] <- "MasonDixon"
polls.sub$MajorPollster[grepl("Democracy", polls.sub$Pollster, ignore.case=TRUE)] <- "DemocracyCorps"
polls.sub$MajorPollster[grepl("Survey", polls.sub$Pollster, ignore.case=TRUE)&
                        grepl("USA", polls.sub$Pollster, ignore.case=TRUE)] <- "SurveyUSA"
polls.sub$MajorPollster[grepl("Reuters", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("AP", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("YouGov", polls.sub$Pollster, ignore.case=TRUE)] <- "YouGov"

tracking.polls<-subset(polls.sub, Region=="National")
tracking.polls$MajorPollster <- as.character(tracking.polls$MajorPollster)
pollsters <- unique(tracking.polls$MajorPollster)
for (i in 1:length(pollsters)) {
  indx <- c(1:nrow(tracking.polls))[tracking.polls$MajorPollster == pollsters[i]]
  if (length(indx) < 10) 
    tracking.polls$MajorPollster[indx] <- "Other"
}
tracking.polls$MajorPollster <- factor(tracking.polls$MajorPollster)
tracking.polls <- subset(tracking.polls, Date > as.Date("9/4/2012","%d/%m/%Y"))

pollsters <- unique(polls.sub$MajorPollster)
for (i in 1:length(pollsters)) {
  indx <- c(1:nrow(polls.sub))[polls.sub$MajorPollster == pollsters[i]]
  if (length(indx) < 10) 
    polls.sub$MajorPollster[indx] <- "Other"
}
polls.sub$MajorPollster <- factor(polls.sub$MajorPollster)
polls.sub$IsMajor <- polls.sub$MajorPollster!="Other"
labels.tracking <- data.frame(Obama.Romney=c(-14, 14), Date=c(as.Date("1/8/2012","%d/%m/%Y"), as.Date("1/8/2012","%d/%m/%Y")), text=c("Romney", "Obama"), colour=c("red", "blue"))
polls.means <- data.frame(Date=tracking.polls$Date, Obama.Romney=tracking.polls$Obama.Romney)
polls.means$Date <- as.Date(polls.means$Date)
polls.means$wks <- as.Date("1/1/2012","%d/%m/%Y") + weeks(week(polls.means$Date))
polls.m <- ddply(polls.means, "wks", summarise, median=median(Obama.Romney))
tracking.polls$weeks <- as.Date("1/1/2012","%d/%m/%Y") + weeks(week(tracking.polls$Date))
bymedian <- with(tracking.polls, reorder(MajorPollster, Obama.Romney, median))
tracking.polls$MajorPollster <- bymedian
states <- map_data("state")
missing.states <- data.frame(long=c(-122, -122, -118, -118, -122, -113, -113, -109, -109, -113, -68, -68, -72, 
  -72, -68, -68, -68, -72, -72, -68), lat=c(27, 29, 29, 27, 27, 27, 29, 29, 27, 27, 33, 35, 35, 33, 33, 30, 
  32, 32, 30, 30), group=rep(64:67, rep(5,4)), order=rep(1:5, 4), region=c(rep("alaska", 5), rep("hawaii", 5), 
  rep("rhode island", 5), rep("district of columbia", 5)), subregion=NA)
states <- rbind(states, missing.states)
states.unique <- data.frame(State=unique(states$region))
# Find most recent polls
polls.state <- subset(polls.sub, Region!="National", Pollster:Obama.Romney)
polls.state <- subset(polls.state, Date > as.Date("2012-9-4", format="%Y-%d-%m"))
polls.state$Pollster <- as.character(polls.state$Pollster)
polls.state$Date <- as.character(polls.state$Date)
polls.state$Region <- tolower(as.character(polls.state$Region))
polls.state$Region<-gsub("-", " ", polls.state$Region)
polls.state$Region<-gsub("hamsphire", "hampshire", polls.state$Region)
x<-unique(states$region)
y<-unique(polls.state$Region)
missing.polls <- x[!x%in%y]
missing.values <- NULL
if ("alabama" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "alabama", 40, 55, "2012-04-09", -15))
if ("arkansas" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "arkansas", 40, 55, "2012-04-09", -15))
if ("delaware" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "delaware", 55, 40, "2012-04-09", 15))
if ("district of columbia" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "district of columbia", 55, 40, "2012-04-09", 15))
if ("idaho" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "idaho", 40, 55, "2012-04-09", -15))
if ("kansas" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "kansas", 40, 55, "2012-04-09", -15))
if ("louisiana" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "louisiana", 40, 55, "2012-04-09", -15))
if ("maryland" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "maryland", 55, 40, "2012-04-09", 15))
if ("mississippi" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "mississippi", 40, 55, "2012-04-09", -15))
if ("rhode island" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "rhode island", 55, 40, "2012-04-09", 15))
if ("south carolina" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "south carolina", 40, 55, "2012-04-09", -15))
if ("south dakota" %in% missing.polls) 
missing.values <- rbind(missing.values,c("guess", "south dakota", 40, 55, "2012-04-09", -15))
if ("west virginia" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "west virginia", 40, 55, "2012-04-09", -15))
if ("wyoming" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "wyoming", 40, 55, "2012-04-09", -15))
if ("alaska" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "alaska", 40, 55, "2012-04-09", -15))
if ("hawaii" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "hawaii", 55, 40, "2012-04-09", 15))
colnames(missing.values)<-c("Pollster", "Region", "Obama", "Romney", "Date", "Obama.Romney")
missing.values <- as.data.frame(missing.values)
missing.values$Pollster <- as.character(missing.values$Pollster)
missing.values$Region <- as.character(missing.values$Region)
missing.values$Obama <- as.numeric(as.character(missing.values$Obama))
missing.values$Romney <- as.numeric(as.character(missing.values$Romney))
missing.values$Date <- as.character(missing.values$Date)
missing.values$Obama.Romney <- as.numeric(as.character(missing.values$Obama.Romney))
#polls.state <- list(missing.values, polls.state) 
#polls.state <- ldply(polls.state)[,-1]
polls.state <- rbind(polls.state, missing.values)
polls.state$Date <- as.Date(polls.state$Date, format="%Y-%m-%d")
#polls.state$Region <- factor(polls.state$Region)
#polls.state.recent <- polls.state
#for (i in 1:length(indx)) { # Only keep the polls in last three weeks, if they exist
#  x<-subset(polls.state.recent, Region==indx[i])
#  if (length(x$Date[x$Date>=(today()-days(21))])>0) {
#    rmrows <- c(1:nrow(polls.state.recent))[(polls.state.recent$State==indx[i]) & (polls.state.recent$Date<(today()-days(21)))]
#    if (nrow(polls.state.recent[-rmrows,])>0)
#      polls.state.recent <- polls.state.recent[-rmrows,]
#  }
#  else { # Keep the latest poll
#    ltstdate <- max(x$Date)
#    rmrows <- c(1:nrow(polls.state.recent))[(polls.state.recent$State==indx[i]) & (polls.state.recent$Date!=ltstdate)]
#    if (nrow(polls.state.recent[-rmrows,])>0)
#      polls.state.recent <- polls.state.recent[-rmrows,]    
#  }
#}
indx<-unique(polls.state$Region)
polls.state.recent<-NULL
for (i in 1:length(indx)) {
  x<-subset(polls.state, Region==indx[i])
  if (length(x$Date[x$Date>=(today()-days(21))])>0) 
    polls.state.recent <- rbind(polls.state.recent, x[x$Date>=(today()-days(21)), ])
  else  # Keep the latest poll
    polls.state.recent <- rbind(polls.state.recent, x[order(x$Date, decreasing=T)[1], ])
}
polls.state.av <- ddply(polls.state.recent, "Region", summarise, Obama.Romney=mean(Obama.Romney, na.rm=T))
polls.state.map <- merge(states, polls.state.av, by.x="region", by.y="Region", all = TRUE)
polls.state.map <- polls.state.map[order(polls.state.map$order),]
polls.state.map$region <- factor(polls.state.map$region)
missing.states.txt <- data.frame(long=c(-117.5, -108.5, -67.5, -67.5), lat=c(28, 28, 34, 31), text=c("AK","HI","RI","DC"))

qplot(long, lat, data=polls.state.map, geom="polygon", group=group, fill=Obama.Romney) + 
  scale_fill_gradient2("Difference", high="blue", mid="white", low="red", midpoint=0, 
    breaks=c(-40, -20, -10, -5, 0, 5, 10, 20, 40), guide = "legend", limits=c(-50,50)) + 
  scale_x_continuous("") + geom_text(data=missing.states.txt, mapping=aes(x=long, y=lat, label=text, 
    group=1, fill=1), colour="grey50", hjust=0) + scale_y_continuous("") 
  end.rcode-->

<!--begin.rcode message=FALSE, echo=FALSE
  opts_chunk$set(fig.width=8, fig.height=5, fig.path='figures-')
  end.rcode-->

<!--begin.rcode carto, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE
carto<-read.csv("cartogram-polygons.csv") #file.choose()) #cartogram-polygons.csv
carto.labels<-read.csv("cartogram-labels.csv")

polls.carto <- merge(carto, polls.state.av, by.x="State", by.y="Region")
carto.labels.polls <- merge(carto.labels, polls.state.av, by.x="State", by.y="Region")  
qplot(Longitude, Latitude, data=polls.carto, geom="polygon", group=State, fill=Obama.Romney) + 
  scale_fill_gradient2(high="blue", mid="white", low="red", midpoint=0) + scale_x_continuous("") + 
  scale_y_continuous("") + 
  geom_text(data=subset(carto.labels.polls, abs(Obama.Romney)>8), mapping=aes(label=Abbrv, group=1, fill=1), 
    colour="white", size=I(3)) + 
  geom_text(data=subset(carto.labels.polls, abs(Obama.Romney)<=8), mapping=aes(label=Abbrv, group=1, fill=1), 
    colour="grey40", size=I(3)) + theme(legend.position="None")
  end.rcode-->

</td>
</tr>
<tr>
<td>
This is a view of the electoral map, from the average poll result for the prior three weeks. Darker blue means state is strongly for Obama, darker red means strongly for Romney. If no poll was taken in the state in the previous three weeks the most recent poll result is used. 
<br>
A cartogram is displayed below the map, where state blocks match the number of electoral votes of the state. It gives a more accurate impression of the mood of the nation, in term of candidate preference.

</td>
</tr>
</table>

				</div>
			</div>

		<div style="clear: both;">&nbsp;</div>
		</div>
		<!-- end #content -->
		<div id="sidebar">
			<ul>
			<img src="images/obama.jpg" align="left"> <img src="images/romney.jpg" align="right"> 
				<li>
					<div style="clear: both;">&nbsp;</div>
				</li>
				<li>
					<h2>Terminology</h2>
					<p>-<a href="http://en.wikipedia.org/wiki/Dot_plot_%28statistics%29">dotplot</a>- -<a href="http://en.wikipedia.org/wiki/Time_series">time series</a>- -<a href="http://en.wikipedia.org/wiki/Kernel_smoother">smoother</a>- -<a href="http://en.wikipedia.org/wiki/Cartogram">cartogram</a>- -<a href="http://en.wikipedia.org/wiki/Scatterplot">scatterplot</a>- -<a href="http://en.wikipedia.org/wiki/Margin_of_error">margin of error</a>-</p>
				</li>
				<li>
					<h2>How's it looking?</h2>
					<ul>
						<li><a href="index.html">Popular vote</a></li>
						<li><a href="#">Electoral map</a></li>
						<li><a href="state-trends.html">State trends</a></li>
						<li><a href="tower.html">Electoral college</a></li>
					</ul>
				</li>
					<h2>Spending</h2>
					<ul>
						<li><a href="PAC-type.html">Type of expenses</a></li>
						<li><a href="PAC-overall.html">Big spenders</a></li>
						<li><a href="PAC-time.html">Temporal trends</a></li>
						<li><a href="PAC-state.html">State trends</a></li>
					</li>
					</ul>
				</li>
				<li>
					<h2>Sources</h2>
					<ul>
						<li><a href="http://www.realclearpolitics.com/epolls/latest_polls/">Real Clear Politics</a></li>
					</ul>
				</li>
        <li> <em> Last poll date:  <!--rinline today() --> </li></em>
			</ul>
		</div>
		<!-- end #sidebar -->
		<div style="clear: both;">&nbsp;</div>
	</div>
	</div>
	</div>
	<!-- end #page -->
</div>
	<div id="footer">
		<p>Copyright (c) 2012 <a href="http://www.stat.iastate.edu">ISU Statistical Graphics</a> Working Group. All rights reserved. Design by <a href="http://www.freecsstemplates.org/">Free CSS Templates</a>.</p>
	</div>
	<!-- end #footer -->
</body>
</html>
