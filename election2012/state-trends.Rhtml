<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
Design by Free CSS Templates
http://www.freecsstemplates.org
Released for free under a Creative Commons Attribution 2.5 License

Name       : GreenOrange  
Description: A two-column, fixed-width design with dark color scheme.
Version    : 1.0
Released   : 20110411

-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="keywords" content="" />
<meta name="description" content="" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>Election 2012 - Obama vs Romney</title>
<link href="style.css" rel="stylesheet" type="text/css" media="screen" />
</head>
<body>
<div id="wrapper">
	<div id="header">
		<div id="logo">
			<h1><a href="#">Election 2012 </a></h1>
  		<h1><a href="#">Obama vs Romney </a></h1>
		</div>
	</div>
	<!-- end #header -->
	<div id="page">
	<div id="page-bgtop">
	<div id="page-bgbtm">
		<div id="content">
			<div class="post">
				<h2 class="title">State polls</h2>
				<div style="clear: both;">&nbsp;</div>
				<div class="entry">

<!--begin.rcode message=FALSE, echo=FALSE
  opts_chunk$set(fig.width=5, fig.height=8, fig.path='figures-')
  end.rcode-->

<table>
<tr> <td>
<!--begin.rcode dotplot, message=FALSE, warning=FALSE, echo=FALSE, cache=FALSE
library(ggplot2)
library(XML)
library(lubridate)
library(plyr)
webpg ="http://www.nationalpolls.com/2012/obama-vs-romney.html"
doc <- htmlParse(webpg)
r <- xmlRoot(doc)
body <- xmlChildren(r)[[2]]
tables <- getNodeSet(doc, "//table")
polls<-NULL

x <- xmlValue(tables[[6]], "td")
#dt <- as.Date(paste(strsplit(x, " ")[[1]][2], "2012"), "%b %d %Y")
xp <- getNodeSet(tables[[6]], "tr")
xps <- data.frame(do.call("rbind", sapply(xp[-1], function(x) (xpathSApply(x, "td", xmlValue)))))
names(xps) <- c("Pollster", "Region", "Date.Range", "Obama", "Romney")
xps$Date.Range <- as.character(xps$Date.Range)
xps$Obama <- as.numeric(as.character(xps$Obama))
xps$Romney <- as.numeric(as.character(xps$Romney))

xps$Date <- as.Date(sapply(xps$Date.Range, FUN= function(i) strsplit(i, "-")[[1]][2]), "%m/%d/%y")
xps$Region[which(xps$Region=="ConnecticutPPP")] <- "Connecticut"

polls.sub <- xps[which(rowSums(is.na(xps))==0), -3]
polls.sub$Obama.Romney<-polls.sub$Obama-polls.sub$Romney
polls.sub$isNational <- polls.sub$Region=="National"

#write.csv(polls.sub, file="NationalPolling-current-polls.csv", row.names=F)

polls.sub$Pollster<-as.character(polls.sub$Pollster)
polls.sub$MajorPollster <- polls.sub$Pollster

polls.sub$MajorPollster[grepl("Gallup", polls.sub$Pollster, ignore.case=TRUE)] <- "Gallup"
polls.sub$MajorPollster[grepl("Rasmussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("Ramussen", polls.sub$Pollster, ignore.case=TRUE)] <- "Rasmussen" 
polls.sub$MajorPollster[grepl("ABC", polls.sub$Pollster, ignore.case=TRUE)] <- "ABC" 
polls.sub$MajorPollster[grepl("NBC", polls.sub$Pollster, ignore.case=TRUE)] <- "NBC" 
polls.sub$MajorPollster[grepl("CBS", polls.sub$Pollster, ignore.case=TRUE)] <- "CBS" 
polls.sub$MajorPollster[grepl("CNN", polls.sub$Pollster, ignore.case=TRUE)] <- "CNN"
polls.sub$MajorPollster[grepl("Pew", polls.sub$Pollster, ignore.case=TRUE)] <- "Pew" 
polls.sub$MajorPollster[grepl("Public Policy", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP" 
polls.sub$MajorPollster[grepl("PPP", polls.sub$Pollster, ignore.case=TRUE)] <- "PPP"
polls.sub$MajorPollster[grepl("Fox", polls.sub$Pollster, ignore.case=TRUE)] <- "Fox"
polls.sub$MajorPollster[grepl("Quinnipiac", polls.sub$Pollster, ignore.case=TRUE)] <- "Quinnipiac"
polls.sub$MajorPollster[grepl("Dixon", polls.sub$Pollster, ignore.case=TRUE)] <- "MasonDixon"
polls.sub$MajorPollster[grepl("Democracy", polls.sub$Pollster, ignore.case=TRUE)] <- "DemocracyCorps"
polls.sub$MajorPollster[grepl("Survey", polls.sub$Pollster, ignore.case=TRUE)&
                        grepl("USA", polls.sub$Pollster, ignore.case=TRUE)] <- "SurveyUSA"
polls.sub$MajorPollster[grepl("Reuters", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("AP", polls.sub$Pollster, ignore.case=TRUE)] <- "AP.Reuters"
polls.sub$MajorPollster[grepl("YouGov", polls.sub$Pollster, ignore.case=TRUE)] <- "YouGov"

pollsters <- unique(polls.sub$MajorPollster)
for (i in 1:length(pollsters)) {
  indx <- c(1:nrow(polls.sub))[polls.sub$MajorPollster == pollsters[i]]
  if (length(indx) < 10) 
    polls.sub$MajorPollster[indx] <- "Other"
}
polls.sub$MajorPollster <- factor(polls.sub$MajorPollster)
polls.sub$IsMajor <- polls.sub$MajorPollster!="Other"

# Find most recent polls
polls.state <- subset(polls.sub, Region!="National", Pollster:Obama.Romney)
polls.state <- subset(polls.state, Date > as.Date("2012-9-4", format="%Y-%d-%m"))
polls.state$Pollster <- as.character(polls.state$Pollster)
polls.state$Date <- as.character(polls.state$Date)
polls.state$Region <- tolower(as.character(polls.state$Region))
polls.state$Region<-gsub("-", " ", polls.state$Region)
polls.state$Region<-gsub("hamsphire", "hampshire", polls.state$Region)
states <- map_data("state")
states.unique <- data.frame(State=unique(states$region))
x<-unique(states$region)
y<-unique(polls.state$Region)
missing.polls <- x[!x%in%y]
missing.values <- NULL
if ("alabama" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "alabama", 40, 55, "2012-04-09", -14))
if ("arkansas" %in% missing.polls) 
  missing.values <- rbind(missing.values, c("guess", "arkansas", 40, 55, "2012-04-09", -12))
if ("delaware" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "delaware", 55, 40, "2012-04-09", 15))
if ("district of columbia" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "district of columbia", 55, 40, "2012-04-09", 25))
if ("idaho" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "idaho", 40, 55, "2012-04-09", -20))
if ("kansas" %in% missing.polls)
  missing.values <- rbind(missing.values,c("guess", "kansas", 40, 55, "2012-04-09", -18))
if ("louisiana" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "louisiana", 40, 55, "2012-04-09", -17))
if ("maryland" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "maryland", 55, 40, "2012-04-09", 12))
if ("mississippi" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "mississippi", 40, 55, "2012-04-09", -13))
if ("rhode island" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "rhode island", 55, 40, "2012-04-09", 14))
if ("south carolina" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "south carolina", 40, 55, "2012-04-09", -18))
if ("south dakota" %in% missing.polls) 
missing.values <- rbind(missing.values,c("guess", "south dakota", 40, 55, "2012-04-09", -10))
if ("west virginia" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "west virginia", 40, 55, "2012-04-09", -12))
if ("wyoming" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "wyoming", 40, 55, "2012-04-09", -23))
if ("alaska" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "alaska", 40, 55, "2012-04-09", -19))
if ("hawaii" %in% missing.polls) 
  missing.values <- rbind(missing.values,c("guess", "hawaii", 55, 40, "2012-04-09", 22))
colnames(missing.values)<-c("Pollster", "Region", "Obama", "Romney", "Date", "Obama.Romney")
missing.values <- as.data.frame(missing.values)
missing.values$Pollster <- as.character(missing.values$Pollster)
missing.values$Region <- as.character(missing.values$Region)
missing.values$Obama <- as.numeric(as.character(missing.values$Obama))
missing.values$Romney <- as.numeric(as.character(missing.values$Romney))
missing.values$Date <- as.character(missing.values$Date)
missing.values$Obama.Romney <- as.numeric(as.character(missing.values$Obama.Romney))
polls.state <- rbind(polls.state, missing.values)
polls.state$Date <- as.Date(polls.state$Date, format="%Y-%m-%d")
indx<-unique(polls.state$Region)
polls.state.recent<-NULL
for (i in 1:length(indx)) {
  x<-subset(polls.state, Region==indx[i])
  if (length(x$Date[x$Date>=(today()-days(21))])>0) 
    polls.state.recent <- rbind(polls.state.recent, x[x$Date>=(today()-days(21)), ])
  else  # Keep the latest poll
    polls.state.recent <- rbind(polls.state.recent, x[order(x$Date, decreasing=T)[1], ])
}
polls.state.av <- ddply(polls.state.recent, "Region", summarise, Obama.Romney=mean(Obama.Romney, na.rm=T))

ord <- order(polls.state.av$Obama.Romney, decreasing=T)
polls.state.av$Region <- factor(polls.state.av$Region, levels=polls.state.av$Region[ord])
polls.state.recent <- merge(polls.state.recent, states.unique, all=TRUE)
polls.state.recent$Region <- factor(polls.state.recent$Region, levels=levels(polls.state.av$Region))
labels <- data.frame(Region=c("north carolina", "north carolina"), Obama.Romney=c(35, -30), text=c("Romney", "Obama"), colour=c("red", "blue"))
polls.state.recent$Obama.Romney <- -polls.state.recent$Obama.Romney
qplot(Region, Obama.Romney, data=polls.state.recent, geom="point", xlab="State", 
  size=I(2), alpha=I(0.01)) + geom_hline(xintercept=0, size=20, colour=I("yellow"), alpha=I(0.2)) + 
  geom_point(data=subset(polls.state.av, Obama.Romney>0), mapping=aes(x=Region, y=-Obama.Romney), 
    colour=I("blue"), alpha=I(0.9), size=3) + 
  geom_point(data=subset(polls.state.av, Obama.Romney<0), mapping=aes(x=Region, y=-Obama.Romney), 
    colour=I("red"), alpha=I(0.9), size=3) + 
  geom_point(data=subset(polls.state.av, Obama.Romney==0), mapping=aes(x=Region, y=-Obama.Romney), 
    colour=I("white"), size=4) + 
  geom_text(data=labels[1,], mapping=aes(label=text), colour=I("red"), size=8, alpha=I(0.2)) + 
  geom_text(data=labels[2,], mapping=aes(label=text), colour=I("blue"), size=8, alpha=I(0.2)) + scale_y_continuous("  Obama ------ | ------ Romney", limits=c(-50, 50), breaks=seq(-50, 50, 10), labels=c(seq(50, 0, -10), seq(10, 50, 10))) + 
  coord_flip() 
  end.rcode-->
</td>
<td>
This is a dotplot of the state polls. Colored points indicate the average poll result, with blue being Obama is ahead and red is when Romney leads. Grey points show actual poll results. Yellow region indicates differences that would suggest results could swing either way. Swing states, that have close poll results, typically have more polls, but this is not the case so much yet. States are ordered from most favorable for Romney, at top left, to most favorable for Obama at bottom right.
</td>
</tr>
</table>

				</div>
			</div>

		<div style="clear: both;">&nbsp;</div>
		</div>
		<!-- end #content -->
		<div id="sidebar">
			<ul>
			<img src="images/obama.jpg" align="left"> <img src="images/romney.jpg" align="right"> 
				<li>
					<div style="clear: both;">&nbsp;</div>
				</li>
				<li>
					<h2>Terminology</h2>
					<p>-<a href="http://en.wikipedia.org/wiki/Dot_plot_%28statistics%29">dotplot</a>- -<a href="http://en.wikipedia.org/wiki/Time_series">time series</a>- -<a href="http://en.wikipedia.org/wiki/Kernel_smoother">smoother</a>- -<a href="http://en.wikipedia.org/wiki/Cartogram">cartogram</a>- -<a href="http://en.wikipedia.org/wiki/Scatterplot">scatterplot</a>- -<a href="http://en.wikipedia.org/wiki/Margin_of_error">margin of error</a>-</p>
				</li>
				<li>
					<h2>How's it looking?</h2>
					<ul>
						<li><a href="index.html">Popular vote</a></li>
						<li><a href="electoral-map.html">Electoral map</a></li>
						<li><a href="#">State trends</a></li>
						<li><a href="tower.html">Electoral college</a></li>
					</ul>
				</li>
					<h2>Spending</h2>
					<ul>
						<li><a href="PAC-type.html">Type of expenses</a></li>
						<li><a href="PAC-overall.html">Big spenders</a></li>
						<li><a href="PAC-time.html">Temporal trends</a></li>
						<li><a href="PAC-state.html">State trends</a></li>
					</li>
					</ul>
				</li>
				<li>
					<h2>Sources</h2>
					<ul>
						<li><a href="http://www.realclearpolitics.com/epolls/latest_polls/">Real Clear Politics</a></li>
					</ul>
				</li>
        <li> <em> Last poll date:  <!--rinline today() --> </li></em>
			</ul>
		</div>
		<!-- end #sidebar -->
		<div style="clear: both;">&nbsp;</div>
	</div>
	</div>
	</div>
	<!-- end #page -->
</div>
	<div id="footer">
		<p>Copyright (c) 2012 <a href="http://www.stat.iastate.edu">ISU Statistical Graphics</a> Working Group. All rights reserved. Design by <a href="http://www.freecsstemplates.org/">Free CSS Templates</a>.</p>
	</div>
	<!-- end #footer -->
</body>
</html>
